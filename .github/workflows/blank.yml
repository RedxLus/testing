name: CI
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#      - name: Speedtest
#        run: |
#          curl -s https://install.speedtest.net/app/cli/install.deb.sh | sudo bash
#          sudo apt update && sudo apt upgrade -y && sudo apt-get install speedtest
#          speedtest --accept-license --accept-gdpr
      - name: Docker Compose
        run: |
          sudo apt-get install runc containerd docker.io -y
          sudo systemctl start docker.service
          sudo systemctl enable docker.service

          sudo curl -L "https://github.com/docker/compose/releases/download/2.5.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: OpenVPN install
        run: |
          sudo apt-get install apt-transport-https -y
          sudo wget https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub
          sudo apt-key add openvpn-repo-pkg-key.pub
          sudo wget -O /etc/apt/sources.list.d/openvpn3.list https://swupdate.openvpn.net/community/openvpn3/repos/openvpn3-focal.list
          sudo apt-get update
          sudo apt-get install openvpn3 -y
      
      - name: OpenVPN config
        env:
          CERTIFICATE_BASE64: ${{ secrets.CLIENT_OVPN }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > /tmp/client.ovpn
          openvpn3 config-import --config /tmp/client.ovpn
          openvpn3 session-start --config /tmp/client.ovpn
      - name: DNS
        run: |
          sudo apt-get install resolvconf -y
          sudo systemctl enable --now resolvconf.service
          echo -e "nameserver 192.168.0.32" | sudo tee /etc/resolvconf/resolv.conf.d/head
          echo -e "nameserver 8.8.8.8 " | sudo tee /etc/resolvconf/resolv.conf.d/head
          sudo resolvconf -u
          dig google.es | grep "SERVER"
      
 #     - name: test
 #       run: |
 #          wget -qO - icanhazip.com
 #     - name: test2
 #       run: |
 #          curl https://raw.githubusercontent.com/macvk/dnsleaktest/master/dnsleaktest.sh -o dnsleaktest.sh
 #          chmod +x dnsleaktest.sh
 #          ./dnsleaktest.sh

      - name: Docker compose
        run: |
          sudo mkdir /dockercompose
          
          cat << EOF | sudo tee -a /dockercompose/docker-compose.yml
          version: '3'
          services:
            runner:
              deploy:
                replicas: 3
              image: redxlus/docker-self-hosted-runner:2.292.0-selenium-chrome-mysqlclient
              restart: always
              environment:
                - PERSONAL_ACCESS_TOKEN=CHANGE_PAT
                - REPO=CHANGE_REPO
          EOF
          
          sudo sed -i --expression "s@CHANGE_PAT@${{ secrets.CHANGE_PAT }}@" /dockercompose/docker-compose.yml
          sudo sed -i --expression "s@CHANGE_REPO@${{ secrets.CHANGE_REPO }}@" /dockercompose/docker-compose.yml
          
          docker swarm init
          docker stack deploy --compose-file="/dockercompose/docker-compose.yml" stack

      - name: SSL
        run:  |
          sudo apt-get update 
          sudo apt-get install python3-pip -y 
          sudo pip3 install --trusted-host pypi.org --trusted-host files.pythonhosted.org pip setuptools
        
      - name: Wait
        run: sleep infinity




